import sys
import traceback
from logging.handlers import TimedRotatingFileHandler, RotatingFileHandler
from pathlib import Path

import django
import os
import logging

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "sima_trade.settings")

django.setup()
from apps.main.models import *

import asyncio
import time
import json
import requests

log_path = Path(__file__).parent.absolute() / 'log.log'
logger = logging.getLogger(__name__)
logging.basicConfig(
    format='%(asctime)s %(levelname) -8s %(message)s',
    level=logging.DEBUG,
    datefmt='%Y.%m.%d %I:%M:%S',
    handlers=[
        # TimedRotatingFileHandler(filename=log_path, when='D', interval=1, backupCount=5),
        # RotatingFileHandler(filename=log_path, maxBytes=10000, backupCount=5),
        # logging.StreamHandler(stream=sys.stderr)
    ],
)

token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTMxNzA4NDQsIm5iZiI6MTcxMzE3MDg0NCwiZXhwIjoxNzQ0NzA2ODQ0LCJqdGkiOjY1NjI1MTB9.Fc2FYDKEpcIW8sc6V5ccY5su81BE61L6DGtpWUwdjTs'
headers = {
    'Content-Type': 'application/json',
    'Authorization': f'Bearer {token}',
}

# json = {
#     'id': None,
#     'level': 1,
#     'path': None,
#     'is_not_empty': 1,
#     'with_adult': 1,
#     'is_adult': None,
#     'expand-root': 1,
#     'full_slug': None,
#     'id-greater-than': None,
#     'is_active': None,
#     'is_for_mobile_app': None,
#     'type': 0,
# }
# r = requests.get(url='GET https://www.sima-land.ru/api/v3/item/')
# r1 = requests.get(url='https://www.sima-land.ru/api/v3/category/', headers=headers)
# items = r1.json()['items']
# cat_ids = [item['id'] for item in items]
# print(r1)
# print(cat_ids)

# json = {
#     # 'category_id': cat_ids.__str__().replace(']', '').replace('[', ''),
#     'category_id': '1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19',
#     'has_price': 1,
#     'has_balance': 1,
# }
# '19769'
from functools import wraps


def timefn(fn):
    @wraps(fn)
    def measure_time(*args, **kwargs):
        ts = time.time()
        result = fn(*args, **kwargs)
        te = time.time()
        print(f'Function {fn.__name__} took {te - ts}')
        return result

    return measure_time


# async def parse(start, stop, task_name):
#     _ts = time.time()
#     for i in range(start, stop):
#         # r2 = requests.get(url=f'https://www.sima-land.ru/api/v3/item/?page={i}&per-page=50', headers=headers)
#         r2 = requests.get(url=f'https://www.sima-land.ru/api/v3/item/?per-page=100&id-greater-than={i*100}', headers=headers)
#         if '422' in str(r2):
#             logger.error(r2.text)
#         # with open(f'items/items{i}.json', 'w') as f:
#         #     f.write(r2.text)
#         data = r2.json()['items']
#         # logger.info(len(data))
#         for item in data:
#             # logger.info(item['id'])
#             try:
#                 await SimaItem.objects.aupdate_or_create(
#                     defaults={
#                         "item_id": item['id'],
#                         "sid": item['sid'],
#                         "uid": item['uid'],
#                         "name": item['name'],
#                         "slug": item['slug'],
#                         "is_disabled": item['is_disabled'],
#                         "reason_of_disabling": item['reason_of_disabling'],
#                         "minimum_order_quantity": item['minimum_order_quantity'],
#                         "price": item['price'],
#                         "price_max": item['price_max'],
#                         "price_per_square_meter": item['price_per_square_meter'],
#                         "price_per_linear_meter": item['price_per_linear_meter'],
#                         "currency": item['currency'],
#                         "created_at": item['created_at'],
#                         "updated_at": item['updated_at'],
#                         "boxtype_id": item['boxtype_id'],
#                         "box_depth": item['box_depth'],
#                         "box_height": item['box_height'],
#                         "box_width": item['box_width'],
#                         "in_box": item['in_box'],
#                         "in_set": item['in_set'],
#                         "depth": item['depth'],
#                         "unit_id": item['unit_id'],
#                         "nested_unit_id": item['nested_unit_id'],
#                         "width": item['width'],
#                         "height": item['height'],
#                         "trademark_id": item['trademark_id'],
#                         "country_id": item['country_id'],
#                         "cart_min_diff": item['cart_min_diff'],
#                         "keep_package": item['keep_package'],
#                         "per_package": item['per_package'],
#                         # "video_file_name":item['video_file_name'],
#                         # "video_cover_file_name":item['video_cover_file_name'],
#                         # "video_file_url":item['video_file_url'],
#                         "series_id": item['series_id'],
#                         "is_hit": item['is_hit'],
#                         "is_licensed": item['is_licensed'],
#                         "is_price_fixed": item['is_price_fixed'],
#                         "is_exclusive": item['is_exclusive'],
#                         "is_motley": item['is_motley'],
#                         "is_adult": item['is_adult'],
#                         "is_protected": item['is_protected'],
#                         "offer_id": item['offer_id'],
#                         "certificate_type_id": item['certificate_type_id'],
#                         "has_usb": item['has_usb'],
#                         "has_battery": item['has_battery'],
#                         "has_clockwork": item['has_clockwork'],
#                         "has_sound": item['has_sound'],
#                         "has_radiocontrol": item['has_radiocontrol'],
#                         "is_inertial": item['is_inertial'],
#                         "is_on_ac_power": item['is_on_ac_power'],
#                         "has_rus_voice": item['has_rus_voice'],
#                         "has_rus_pack": item['has_rus_pack'],
#                         "has_light": item['has_light'],
#                         "is_day_offer": item['is_day_offer'],
#                         "page_title": item['page_title'],
#                         "page_keywords": item['page_keywords'],
#                         "page_description": item['page_description'],
#                         "parent_item_id": item['parent_item_id'],
#                         "max_qty": item['max_qty'],
#                         "min_qty": item['min_qty'],
#                         "modifier_id": item['modifier_id'],
#                         "modifier_value": item['modifier_value'],
#                         "qty_multiplier": item['qty_multiplier'],
#                         "gift_id": item['gift_id'],
#                         "surface_area": item['surface_area'],
#                         "linear_meters": item['linear_meters'],
#                         "is_loco": item['is_loco'],
#                         "novelted_at": item['novelted_at'],
#                         "is_paid_delivery": item['is_paid_delivery'],
#                         "package_volume": item['package_volume'],
#                         "min_age": item['min_age'],
#                         "power": item['power'],
#                         "volume": item['volume'],
#                         "transport_condition_id": item['transport_condition_id'],
#                         "has_discount": item['has_discount'],
#                         "is_gift": item['is_gift'],
#                         "is_boxed": item['is_boxed'],
#                         "product_volume": item['product_volume'],
#                         "box_volume": item['box_volume'],
#                         "box_capacity": item['box_capacity'],
#                         "packing_volume_factor": item['packing_volume_factor'],
#                         "is_tire_spike": item['is_tire_spike'],
#                         "is_tire_run_flat": item['is_tire_run_flat'],
#                         "tire_season_id": item['tire_season_id'],
#                         "tire_diameter_id": item['tire_diameter_id'],
#                         "tire_width_id": item['tire_width_id'],
#                         "tire_section_height_id": item['tire_section_height_id'],
#                         "tire_load_index_id": item['tire_load_index_id'],
#                         "tire_speed_index_id": item['tire_speed_index_id'],
#                         "wheel_lz_id": item['wheel_lz_id'],
#                         "wheel_width_id": item['wheel_width_id'],
#                         "wheel_diameter_id": item['wheel_diameter_id'],
#                         "wheel_dia_id": item['wheel_dia_id'],
#                         "wheel_pcd_id": item['wheel_pcd_id'],
#                         "wheel_et_id": item['wheel_et_id'],
#                         "has_body_drawing": item['has_body_drawing'],
#                         "has_cord_case": item['has_cord_case'],
#                         "has_teapot": item['has_teapot'],
#                         "has_termostat": item['has_termostat'],
#                         "is_imprintable": item['is_imprintable'],
#                         "isbn": item['isbn'],
#                         "page_count": item['page_count'],
#                         "is_add_to_cart_multiple": item['isAddToCartMultiple'],
#                         "supply_period": item['supply_period'],
#                         "has_action": item['has_action'],
#                         "has_action_discount_system": item['has_action_discount_system'],
#                         "has_jewelry_action": item['has_jewelry_action'],
#                         "has_3_pay_2_action": item['has_3_pay_2_action'],
#                         "has_best_fabric": item['has_best_fabric'],
#                         "has_best_textile": item['has_best_textile'],
#                         "has_number_one_made_in_russia": item['has_number_one_made_in_russia'],
#                         "photo_url": item['photoUrl'],
#                         "audio_filename": item['audio_filename'],
#                         "photo_3d_count": item['photo_3d_count'],
#                         "is_markdown": item['is_markdown'],
#                         "is_prepay_needed": item['is_prepay_needed'],
#                         "is_paid_delivery_ekb": item['is_paid_delivery_ekb'],
#                         "mean_rating": item['mean_rating'],
#                         "comments_count": item['comments_count'],
#                         "markdown_reason": item['markdown_reason'],
#                         "is_wholesale": item['is_wholesale'],
#                         "is_wholesale_conservation": item['is_wholesale_conservation'],
#                         "type": item['type'],
#                         "is_shock_price": item['is_shock_price'],
#                         "is_recommended": item['is_recommended'],
#                         "vat": item['vat'],
#                         "is_export_to_s3": item['is_export_to_s3'],
#                         "currency_sign": item['currencySign'],
#                         "is_enough": item['isEnough'],
#                         "qty_rule": item['qtyRule'],
#                         "qty_rules": item['qty_rules'],
#                         "custom_qty_rules_data": item['custom_qty_rules_data'],
#                         "plural_name_format": item['pluralNameFormat'],
#                         "in_box_plural_name_format": item['inBoxPluralNameFormat'],
#                         "balance_plural_name_format": item['balancePluralNameFormat'],
#                         "can_buy_by_credit": item['can_buy_by_credit'],
#                         "supplier_code": item['supplier_code'],
#                         "weight": item['weight'],
#                         "has_special_offer": item['has_special_offer'],
#                         "has_day_discount": item['has_day_discount'],
#                         "has_erich_krause": item['has_erich_krause'],
#                         "has_tm_gamma_gifts": item['has_tm_gamma_gifts'],
#                         "has_superprice_on_line": item['has_superprice_on_line'],
#                         "has_week_discount": item['has_week_discount'],
#                         "has_3days_discount": item['has_3days_discount'],
#                         "has_best_fabric_2018": item['has_best_fabric_2018'],
#                         "has_pay_later": item['has_pay_later'],
#                         "has_new_rules": item['has_new_rules'],
#                         "has_item_month": item['has_item_month'],
#                         "has_batteries_gift": item['has_batteries_gift'],
#                         "special_offer_id": item['special_offer_id'],
#                         "has_4_pay_2_action": item['has_4_pay_2_action'],
#                         "has_take_installments_action": item['has_take_installments_action'],
#                         "min_sum_order": item['min_sum_order'],
#                         "wholesale_price": item['wholesale_price'],
#                         "wholesale_price_text": item['wholesale_price_text'],
#                         "is_part": item['is_part'],
#                         "is_remote_store": item['is_remote_store'],
#                         "is_small_wholesale_available": item['is_small_wholesale_available'],
#                         "is_plant": item['is_plant'],
#                         "color": item['color'],
#                         "image_title": item['image_title'],
#                         "image_alt": item['image_alt'],
#                         "short_name": item['short_name'],
#                         "is_free_delivery": item['is_free_delivery'],
#                         "min_sum_for_free_delivery": item['min_sum_for_free_delivery'],
#                         "updated_item_at": item['updated_item_at'],
#                         "img": item['img'],
#                         "nested_unit": item['nestedUnit'],
#                         "is_entrance_type_by_weight": item['isEntranceTypeByWeight'],
#                         "real_min_qty": item['real_min_qty'],
#                         "is_weighted_goods": item['is_weighted_goods'],
#                         "offer": item['offer'],
#                         "discount_percent": item['discountPercent'],
#                         "has_gift": item['hasGift'],
#                         "has_gift_assignee": item['hasGiftAssignee'],
#                         "is_novelty": item['isNovelty'],
#                         "item_url": item['itemUrl'],
#                         "price_unit": item['price_unit'],
#                         "has_volume_discount": item['has_volume_discount'],
#                         "modifiers_count": item['modifiers_count'],
#                         "size": item['size'],
#                         "stuff": item['stuff'],
#                         "trademark": item['trademark'],
#                         "series": item['series'],
#                         "ecommerce_variant": item['ecommerce_variant'],
#                         "loan_category_id": item['loan_category_id'],
#                         "transit_in_settlement": item['transit_in_settlement'],
#                         "is_item_description_hidden": item['is_item_description_hidden'],
#                         "is_found_cheaper_enabled": item['is_found_cheaper_enabled'],
#                         "wholesale_price_unit": item['wholesale_price_unit'],
#                         "wholesale_text": item['wholesale_text'],
#                         "arrival_date": item['arrivalDate'],
#                         "is_available_in_giper": item['is_available_in_giper'],
#                         "retail_price": item['retail_price'],
#                         # "video_cover_url":item['video_cover_url'],
#                     },
#                     item_id=item['id'],
#
#                 )
#             except asyncio.CancelledError as e:
#                 # print(item)
#                 logger.error(e)
#     _te = time.time()
#     logger.info(f"{task_name} finished in {_ts - _te} seconds")

async def parse(start, stop, task_name):
    _ts = time.time()
    # cat_ids = [x.cat_id for x in SimaCategory.objects.all()]
    for i in range(start, stop):
        try:
            # r2 = requests.get(url=f'https://www.sima-land.ru/api/v3/item/?per-page=100&category_id={cat_id}', headers=headers)
            r2 = requests.get(url=f'https://www.sima-land.ru/api/v3/item/?per-page=100&category_id={i}',
                              headers=headers,
                              )
            print(r2.url, r2.status_code)

            if '422' in str(r2):
                logger.error(r2.text)
            # with open(f'items/items{i}.json', 'w') as f:
            #     f.write(r2.text)
            data = r2.json()['items']
            # logger.info(len(data))
            for item in data:
                # logger.info(item['id'])
                try:
                    await SimaItem.objects.aupdate_or_create(
                        defaults={
                            "item_id": item['id'],
                            "sid": item['sid'],
                            "uid": item['uid'],
                            "name": item['name'],
                            "slug": item['slug'],
                            "is_disabled": item['is_disabled'],
                            "reason_of_disabling": item['reason_of_disabling'],
                            "minimum_order_quantity": item['minimum_order_quantity'],
                            "price": item['price'],
                            "price_max": item['price_max'],
                            "price_per_square_meter": item['price_per_square_meter'],
                            "price_per_linear_meter": item['price_per_linear_meter'],
                            "currency": item['currency'],
                            "created_at": item['created_at'],
                            "updated_at": item['updated_at'],
                            "boxtype_id": item['boxtype_id'],
                            "box_depth": item['box_depth'],
                            "box_height": item['box_height'],
                            "box_width": item['box_width'],
                            "in_box": item['in_box'],
                            "in_set": item['in_set'],
                            "depth": item['depth'],
                            "unit_id": item['unit_id'],
                            "nested_unit_id": item['nested_unit_id'],
                            "width": item['width'],
                            "height": item['height'],
                            "trademark_id": item['trademark_id'],
                            "country_id": item['country_id'],
                            "cart_min_diff": item['cart_min_diff'],
                            "keep_package": item['keep_package'],
                            "per_package": item['per_package'],
                            # "video_file_name":item['video_file_name'],
                            # "video_cover_file_name":item['video_cover_file_name'],
                            # "video_file_url":item['video_file_url'],
                            "series_id": item['series_id'],
                            "is_hit": item['is_hit'],
                            "is_licensed": item['is_licensed'],
                            "is_price_fixed": item['is_price_fixed'],
                            "is_exclusive": item['is_exclusive'],
                            "is_motley": item['is_motley'],
                            "is_adult": item['is_adult'],
                            "is_protected": item['is_protected'],
                            "offer_id": item['offer_id'],
                            "certificate_type_id": item['certificate_type_id'],
                            "has_usb": item['has_usb'],
                            "has_battery": item['has_battery'],
                            "has_clockwork": item['has_clockwork'],
                            "has_sound": item['has_sound'],
                            "has_radiocontrol": item['has_radiocontrol'],
                            "is_inertial": item['is_inertial'],
                            "is_on_ac_power": item['is_on_ac_power'],
                            "has_rus_voice": item['has_rus_voice'],
                            "has_rus_pack": item['has_rus_pack'],
                            "has_light": item['has_light'],
                            "is_day_offer": item['is_day_offer'],
                            "page_title": item['page_title'],
                            "page_keywords": item['page_keywords'],
                            "page_description": item['page_description'],
                            "parent_item_id": item['parent_item_id'],
                            "max_qty": item['max_qty'],
                            "min_qty": item['min_qty'],
                            "modifier_id": item['modifier_id'],
                            "modifier_value": item['modifier_value'],
                            "qty_multiplier": item['qty_multiplier'],
                            "gift_id": item['gift_id'],
                            "surface_area": item['surface_area'],
                            "linear_meters": item['linear_meters'],
                            "is_loco": item['is_loco'],
                            "novelted_at": item['novelted_at'],
                            "is_paid_delivery": item['is_paid_delivery'],
                            "package_volume": item['package_volume'],
                            "min_age": item['min_age'],
                            "power": item['power'],
                            "volume": item['volume'],
                            "transport_condition_id": item['transport_condition_id'],
                            "has_discount": item['has_discount'],
                            "is_gift": item['is_gift'],
                            "is_boxed": item['is_boxed'],
                            "product_volume": item['product_volume'],
                            "box_volume": item['box_volume'],
                            "box_capacity": item['box_capacity'],
                            "packing_volume_factor": item['packing_volume_factor'],
                            "is_tire_spike": item['is_tire_spike'],
                            "is_tire_run_flat": item['is_tire_run_flat'],
                            "tire_season_id": item['tire_season_id'],
                            "tire_diameter_id": item['tire_diameter_id'],
                            "tire_width_id": item['tire_width_id'],
                            "tire_section_height_id": item['tire_section_height_id'],
                            "tire_load_index_id": item['tire_load_index_id'],
                            "tire_speed_index_id": item['tire_speed_index_id'],
                            "wheel_lz_id": item['wheel_lz_id'],
                            "wheel_width_id": item['wheel_width_id'],
                            "wheel_diameter_id": item['wheel_diameter_id'],
                            "wheel_dia_id": item['wheel_dia_id'],
                            "wheel_pcd_id": item['wheel_pcd_id'],
                            "wheel_et_id": item['wheel_et_id'],
                            "has_body_drawing": item['has_body_drawing'],
                            "has_cord_case": item['has_cord_case'],
                            "has_teapot": item['has_teapot'],
                            "has_termostat": item['has_termostat'],
                            "is_imprintable": item['is_imprintable'],
                            "isbn": item['isbn'],
                            "page_count": item['page_count'],
                            "is_add_to_cart_multiple": item['isAddToCartMultiple'],
                            "supply_period": item['supply_period'],
                            "has_action": item['has_action'],
                            "has_action_discount_system": item['has_action_discount_system'],
                            "has_jewelry_action": item['has_jewelry_action'],
                            "has_3_pay_2_action": item['has_3_pay_2_action'],
                            "has_best_fabric": item['has_best_fabric'],
                            "has_best_textile": item['has_best_textile'],
                            "has_number_one_made_in_russia": item['has_number_one_made_in_russia'],
                            "photo_url": item['photoUrl'],
                            "audio_filename": item['audio_filename'],
                            "photo_3d_count": item['photo_3d_count'],
                            "is_markdown": item['is_markdown'],
                            "is_prepay_needed": item['is_prepay_needed'],
                            "is_paid_delivery_ekb": item['is_paid_delivery_ekb'],
                            "mean_rating": item['mean_rating'],
                            "comments_count": item['comments_count'],
                            "markdown_reason": item['markdown_reason'],
                            "is_wholesale": item['is_wholesale'],
                            "is_wholesale_conservation": item['is_wholesale_conservation'],
                            "type": item['type'],
                            "is_shock_price": item['is_shock_price'],
                            "is_recommended": item['is_recommended'],
                            "vat": item['vat'],
                            "is_export_to_s3": item['is_export_to_s3'],
                            "currency_sign": item['currencySign'],
                            "is_enough": item['isEnough'],
                            "qty_rule": item['qtyRule'],
                            "qty_rules": item['qty_rules'],
                            "custom_qty_rules_data": item['custom_qty_rules_data'],
                            "plural_name_format": item['pluralNameFormat'],
                            "in_box_plural_name_format": item['inBoxPluralNameFormat'],
                            "balance_plural_name_format": item['balancePluralNameFormat'],
                            "can_buy_by_credit": item['can_buy_by_credit'],
                            "supplier_code": item['supplier_code'],
                            "weight": item['weight'],
                            "has_special_offer": item['has_special_offer'],
                            "has_day_discount": item['has_day_discount'],
                            "has_erich_krause": item['has_erich_krause'],
                            "has_tm_gamma_gifts": item['has_tm_gamma_gifts'],
                            "has_superprice_on_line": item['has_superprice_on_line'],
                            "has_week_discount": item['has_week_discount'],
                            "has_3days_discount": item['has_3days_discount'],
                            "has_best_fabric_2018": item['has_best_fabric_2018'],
                            "has_pay_later": item['has_pay_later'],
                            "has_new_rules": item['has_new_rules'],
                            "has_item_month": item['has_item_month'],
                            "has_batteries_gift": item['has_batteries_gift'],
                            "special_offer_id": item['special_offer_id'],
                            "has_4_pay_2_action": item['has_4_pay_2_action'],
                            "has_take_installments_action": item['has_take_installments_action'],
                            "min_sum_order": item['min_sum_order'],
                            "wholesale_price": item['wholesale_price'],
                            "wholesale_price_text": item['wholesale_price_text'],
                            "is_part": item['is_part'],
                            "is_remote_store": item['is_remote_store'],
                            "is_small_wholesale_available": item['is_small_wholesale_available'],
                            "is_plant": item['is_plant'],
                            "color": item['color'],
                            "image_title": item['image_title'],
                            "image_alt": item['image_alt'],
                            "short_name": item['short_name'],
                            "is_free_delivery": item['is_free_delivery'],
                            "min_sum_for_free_delivery": item['min_sum_for_free_delivery'],
                            "updated_item_at": item['updated_item_at'],
                            "img": item['img'],
                            "nested_unit": item['nestedUnit'],
                            "is_entrance_type_by_weight": item['isEntranceTypeByWeight'],
                            "real_min_qty": item['real_min_qty'],
                            "is_weighted_goods": item['is_weighted_goods'],
                            "offer": item['offer'],
                            "discount_percent": item['discountPercent'],
                            "has_gift": item['hasGift'],
                            "has_gift_assignee": item['hasGiftAssignee'],
                            "is_novelty": item['isNovelty'],
                            "item_url": item['itemUrl'],
                            "price_unit": item['price_unit'],
                            "has_volume_discount": item['has_volume_discount'],
                            "modifiers_count": item['modifiers_count'],
                            "size": item['size'],
                            "stuff": item['stuff'],
                            "trademark": item['trademark'],
                            "series": item['series'],
                            "ecommerce_variant": item['ecommerce_variant'],
                            "loan_category_id": item['loan_category_id'],
                            "transit_in_settlement": item['transit_in_settlement'],
                            "is_item_description_hidden": item['is_item_description_hidden'],
                            "is_found_cheaper_enabled": item['is_found_cheaper_enabled'],
                            "wholesale_price_unit": item['wholesale_price_unit'],
                            "wholesale_text": item['wholesale_text'],
                            "arrival_date": item['arrivalDate'],
                            "is_available_in_giper": item['is_available_in_giper'],
                            "retail_price": item['retail_price'],
                            # "video_cover_url":item['video_cover_url'],
                        },
                        item_id=item['id'],

                    )
                except asyncio.CancelledError as e:
                    # print(item)
                    logger.error(e)
        except:
            print(traceback.format_exc())
    _te = time.time()
    logger.info(f"{task_name} finished in {_ts - _te} seconds")


async def main():
    background_tasks = set()
    pairs = [
        ('task_1', 1, 4000), ('task_2', 4001, 8000),
        ('task_3', 8001, 12000), ('task_4', 12001, 16000),
        ('task_5', 16001, 20000), ('task_6', 20001, 24000),
        ('task_7', 24001, 28000), ('task_8', 28001, 32000),
        ('task_9', 32001, 36000), ('task_10', 36001, 39894),
    ]
    await asyncio.gather(
        parse(start=pairs[0][1], stop=pairs[0][2], task_name=pairs[0][0]),
        parse(start=pairs[1][1], stop=pairs[1][2], task_name=pairs[1][0]),
        parse(start=pairs[2][1], stop=pairs[2][2], task_name=pairs[2][0]),
        parse(start=pairs[3][1], stop=pairs[3][2], task_name=pairs[3][0]),
        parse(start=pairs[4][1], stop=pairs[4][2], task_name=pairs[4][0]),
        parse(start=pairs[5][1], stop=pairs[5][2], task_name=pairs[5][0]),
        parse(start=pairs[6][1], stop=pairs[6][2], task_name=pairs[6][0]),
        parse(start=pairs[7][1], stop=pairs[7][2], task_name=pairs[7][0]),
        parse(start=pairs[8][1], stop=pairs[8][2], task_name=pairs[8][0]),
        parse(start=pairs[9][1], stop=pairs[9][2], task_name=pairs[9][0]),
    )


if __name__ == '__main__':
    try:
        ts = time.time()
        # asyncio.run(main())
        loop = asyncio.get_event_loop()
        loop.run_until_complete(main())
        te = time.time()
        logger.info(f'Total Finished in {te - ts:.2f} seconds')
    except KeyboardInterrupt:
        sys.exit(1)
    # defaults = {
    #     "item_id": item['id'],
    #     "sid": item['sid'],
    #     "uid": item['uid'],
    #     "name": item['name'],
    #     "slug": item['slug'],
    #     "is_disabled": item['is_disabled'],
    #     "reason_of_disabling": item['reason_of_disabling'],
    #     "minimum_order_quantity": item['minimum_order_quantity'],
    #     "price": item['price'],
    #     "price_max": item['price_max'],
    #     "price_per_square_meter": item['price_per_square_meter'],
    #     "price_per_linear_meter": item['price_per_linear_meter'],
    #     "currency": item['currency'],
    #     "created_at": item['created_at'],
    #     "updated_at": item['updated_at'],
    #     "boxtype_id": item['boxtype_id'],
    #     "box_depth": item['box_depth'],
    #     "box_height": item['box_height'],
    #     "box_width": item['box_width'],
    #     "in_box": item['in_box'],
    #     "in_set": item['in_set'],
    #     "depth": item['depth'],
    #     "unit_id": item['unit_id'],
    #     "nested_unit_id": item['nested_unit_id'],
    #     "width": item['width'],
    #     "height": item['height'],
    #     "trademark_id": item['trademark_id'],
    #     "country_id": item['country_id'],
    #     "cart_min_diff": item['cart_min_diff'],
    #     "keep_package": item['keep_package'],
    #     "per_package": item['per_package'],
    #     # "video_file_name":item['video_file_name'],
    #     # "video_cover_file_name":item['video_cover_file_name'],
    #     # "video_file_url":item['video_file_url'],
    #     "series_id": item['series_id'],
    #     "is_hit": item['is_hit'],
    #     "is_licensed": item['is_licensed'],
    #     "is_price_fixed": item['is_price_fixed'],
    #     "is_exclusive": item['is_exclusive'],
    #     "is_motley": item['is_motley'],
    #     "is_adult": item['is_adult'],
    #     "is_protected": item['is_protected'],
    #     "offer_id": item['offer_id'],
    #     "certificate_type_id": item['certificate_type_id'],
    #     "has_usb": item['has_usb'],
    #     "has_battery": item['has_battery'],
    #     "has_clockwork": item['has_clockwork'],
    #     "has_sound": item['has_sound'],
    #     "has_radiocontrol": item['has_radiocontrol'],
    #     "is_inertial": item['is_inertial'],
    #     "is_on_ac_power": item['is_on_ac_power'],
    #     "has_rus_voice": item['has_rus_voice'],
    #     "has_rus_pack": item['has_rus_pack'],
    #     "has_light": item['has_light'],
    #     "is_day_offer": item['is_day_offer'],
    #     "page_title": item['page_title'],
    #     "page_keywords": item['page_keywords'],
    #     "page_description": item['page_description'],
    #     "parent_item_id": item['parent_item_id'],
    #     "max_qty": item['max_qty'],
    #     "min_qty": item['min_qty'],
    #     "modifier_id": item['modifier_id'],
    #     "modifier_value": item['modifier_value'],
    #     "qty_multiplier": item['qty_multiplier'],
    #     "gift_id": item['gift_id'],
    #     "surface_area": item['surface_area'],
    #     "linear_meters": item['linear_meters'],
    #     "is_loco": item['is_loco'],
    #     "novelted_at": item['novelted_at'],
    #     "is_paid_delivery": item['is_paid_delivery'],
    #     "package_volume": item['package_volume'],
    #     "min_age": item['min_age'],
    #     "power": item['power'],
    #     "volume": item['volume'],
    #     "transport_condition_id": item['transport_condition_id'],
    #     "has_discount": item['has_discount'],
    #     "is_gift": item['is_gift'],
    #     "is_boxed": item['is_boxed'],
    #     "product_volume": item['product_volume'],
    #     "box_volume": item['box_volume'],
    #     "box_capacity": item['box_capacity'],
    #     "packing_volume_factor": item['packing_volume_factor'],
    #     "is_tire_spike": item['is_tire_spike'],
    #     "is_tire_run_flat": item['is_tire_run_flat'],
    #     "tire_season_id": item['tire_season_id'],
    #     "tire_diameter_id": item['tire_diameter_id'],
    #     "tire_width_id": item['tire_width_id'],
    #     "tire_section_height_id": item['tire_section_height_id'],
    #     "tire_load_index_id": item['tire_load_index_id'],
    #     "tire_speed_index_id": item['tire_speed_index_id'],
    #     "wheel_lz_id": item['wheel_lz_id'],
    #     "wheel_width_id": item['wheel_width_id'],
    #     "wheel_diameter_id": item['wheel_diameter_id'],
    #     "wheel_dia_id": item['wheel_dia_id'],
    #     "wheel_pcd_id": item['wheel_pcd_id'],
    #     "wheel_et_id": item['wheel_et_id'],
    #     "has_body_drawing": item['has_body_drawing'],
    #     "has_cord_case": item['has_cord_case'],
    #     "has_teapot": item['has_teapot'],
    #     "has_termostat": item['has_termostat'],
    #     "is_imprintable": item['is_imprintable'],
    #     "isbn": item['isbn'],
    #     "page_count": item['page_count'],
    #     "is_add_to_cart_multiple": item['isAddToCartMultiple'],
    #     "supply_period": item['supply_period'],
    #     "has_action": item['has_action'],
    #     "has_action_discount_system": item['has_action_discount_system'],
    #     "has_jewelry_action": item['has_jewelry_action'],
    #     "has_3_pay_2_action": item['has_3_pay_2_action'],
    #     "has_best_fabric": item['has_best_fabric'],
    #     "has_best_textile": item['has_best_textile'],
    #     "has_number_one_made_in_russia": item['has_number_one_made_in_russia'],
    #     "photo_url": item['photoUrl'],
    #     "audio_filename": item['audio_filename'],
    #     "photo_3d_count": item['photo_3d_count'],
    #     "is_markdown": item['is_markdown'],
    #     "is_prepay_needed": item['is_prepay_needed'],
    #     "is_paid_delivery_ekb": item['is_paid_delivery_ekb'],
    #     "mean_rating": item['mean_rating'],
    #     "comments_count": item['comments_count'],
    #     "markdown_reason": item['markdown_reason'],
    #     "is_wholesale": item['is_wholesale'],
    #     "is_wholesale_conservation": item['is_wholesale_conservation'],
    #     "type": item['type'],
    #     "is_shock_price": item['is_shock_price'],
    #     "is_recommended": item['is_recommended'],
    #     "vat": item['vat'],
    #     "is_export_to_s3": item['is_export_to_s3'],
    #     "currency_sign": item['currencySign'],
    #     "is_enough": item['isEnough'],
    #     "qty_rule": item['qtyRule'],
    #     "qty_rules": item['qty_rules'],
    #     "custom_qty_rules_data": item['custom_qty_rules_data'],
    #     "plural_name_format": item['pluralNameFormat'],
    #     "in_box_plural_name_format": item['inBoxPluralNameFormat'],
    #     "balance_plural_name_format": item['balancePluralNameFormat'],
    #     "can_buy_by_credit": item['can_buy_by_credit'],
    #     "supplier_code": item['supplier_code'],
    #     "weight": item['weight'],
    #     "has_special_offer": item['has_special_offer'],
    #     "has_day_discount": item['has_day_discount'],
    #     "has_erich_krause": item['has_erich_krause'],
    #     "has_tm_gamma_gifts": item['has_tm_gamma_gifts'],
    #     "has_superprice_on_line": item['has_superprice_on_line'],
    #     "has_week_discount": item['has_week_discount'],
    #     "has_3days_discount": item['has_3days_discount'],
    #     "has_best_fabric_2018": item['has_best_fabric_2018'],
    #     "has_pay_later": item['has_pay_later'],
    #     "has_new_rules": item['has_new_rules'],
    #     "has_item_month": item['has_item_month'],
    #     "has_batteries_gift": item['has_batteries_gift'],
    #     "special_offer_id": item['special_offer_id'],
    #     "has_4_pay_2_action": item['has_4_pay_2_action'],
    #     "has_take_installments_action": item['has_take_installments_action'],
    #     "min_sum_order": item['min_sum_order'],
    #     "wholesale_price": item['wholesale_price'],
    #     "wholesale_price_text": item['wholesale_price_text'],
    #     "is_part": item['is_part'],
    #     "is_remote_store": item['is_remote_store'],
    #     "is_small_wholesale_available": item['is_small_wholesale_available'],
    #     "is_plant": item['is_plant'],
    #     "color": item['color'],
    #     "image_title": item['image_title'],
    #     "image_alt": item['image_alt'],
    #     "short_name": item['short_name'],
    #     "is_free_delivery": item['is_free_delivery'],
    #     "min_sum_for_free_delivery": item['min_sum_for_free_delivery'],
    #     "updated_item_at": item['updated_item_at'],
    #     "img": item['img'],
    #     "nested_unit": item['nestedUnit'],
    #     "is_entrance_type_by_weight": item['isEntranceTypeByWeight'],
    #     "real_min_qty": item['real_min_qty'],
    #     "is_weighted_goods": item['is_weighted_goods'],
    #     "offer": item['offer'],
    #     "discount_percent": item['discountPercent'],
    #     "has_gift": item['hasGift'],
    #     "has_gift_assignee": item['hasGiftAssignee'],
    #     "is_novelty": item['isNovelty'],
    #     "item_url": item['itemUrl'],
    #     "price_unit": item['price_unit'],
    #     "has_volume_discount": item['has_volume_discount'],
    #     "modifiers_count": item['modifiers_count'],
    #     "size": item['size'],
    #     "stuff": item['stuff'],
    #     "trademark": item['trademark'],
    #     "series": item['series'],
    #     "ecommerce_variant": item['ecommerce_variant'],
    #     "loan_category_id": item['loan_category_id'],
    #     "transit_in_settlement": item['transit_in_settlement'],
    #     "is_item_description_hidden": item['is_item_description_hidden'],
    #     "is_found_cheaper_enabled": item['is_found_cheaper_enabled'],
    #     "wholesale_price_unit": item['wholesale_price_unit'],
    #     "wholesale_text": item['wholesale_text'],
    #     "arrival_date": item['arrivalDate'],
    #     "is_available_in_giper": item['is_available_in_giper'],
    #     "retail_price": item['retail_price'],
    #     # "video_cover_url":item['video_cover_url'],
    # }

    # item_id = item['id'],
    # sid = item['sid'],
    # uid = item['uid'],
    # name = item['name'],
    # slug = item['slug'],
    # is_disabled = item['is_disabled'],
    # reason_of_disabling = item['reason_of_disabling'],
    # minimum_order_quantity = item['minimum_order_quantity'],
    # price = item['price'],
    # price_max = item['price_max'],
    # price_per_square_meter = item['price_per_square_meter'],
    # price_per_linear_meter = item['price_per_linear_meter'],
    # currency = item['currency'],
    # created_at = item['created_at'],
    # updated_at = item['updated_at'],
    # boxtype_id = item['boxtype_id'],
    # box_depth = item['box_depth'],
    # box_height = item['box_height'],
    # box_width = item['box_width'],
    # in_box = item['in_box'],
    # in_set = item['in_set'],
    # depth = item['depth'],
    # unit_id = item['unit_id'],
    # nested_unit_id = item['nested_unit_id'],
    # width = item['width'],
    # height = item['height'],
    # trademark_id = item['trademark_id'],
    # country_id = item['country_id'],
    # cart_min_diff = item['cart_min_diff'],
    # keep_package = item['keep_package'],
    # per_package = item['per_package'],
    # # video_file_name=item['video_file_name'],
    # # video_cover_file_name=item['video_cover_file_name'],
    # # video_file_url=item['video_file_url'],
    # series_id = item['series_id'],
    # is_hit = item['is_hit'],
    # is_licensed = item['is_licensed'],
    # is_price_fixed = item['is_price_fixed'],
    # is_exclusive = item['is_exclusive'],
    # is_motley = item['is_motley'],
    # is_adult = item['is_adult'],
    # is_protected = item['is_protected'],
    # offer_id = item['offer_id'],
    # certificate_type_id = item['certificate_type_id'],
    # has_usb = item['has_usb'],
    # has_battery = item['has_battery'],
    # has_clockwork = item['has_clockwork'],
    # has_sound = item['has_sound'],
    # has_radiocontrol = item['has_radiocontrol'],
    # is_inertial = item['is_inertial'],
    # is_on_ac_power = item['is_on_ac_power'],
    # has_rus_voice = item['has_rus_voice'],
    # has_rus_pack = item['has_rus_pack'],
    # has_light = item['has_light'],
    # is_day_offer = item['is_day_offer'],
    # page_title = item['page_title'],
    # page_keywords = item['page_keywords'],
    # page_description = item['page_description'],
    # parent_item_id = item['parent_item_id'],
    # max_qty = item['max_qty'],
    # min_qty = item['min_qty'],
    # modifier_id = item['modifier_id'],
    # modifier_value = item['modifier_value'],
    # qty_multiplier = item['qty_multiplier'],
    # gift_id = item['gift_id'],
    # surface_area = item['surface_area'],
    # linear_meters = item['linear_meters'],
    # is_loco = item['is_loco'],
    # novelted_at = item['novelted_at'],
    # is_paid_delivery = item['is_paid_delivery'],
    # package_volume = item['package_volume'],
    # min_age = item['min_age'],
    # power = item['power'],
    # volume = item['volume'],
    # transport_condition_id = item['transport_condition_id'],
    # has_discount = item['has_discount'],
    # is_gift = item['is_gift'],
    # is_boxed = item['is_boxed'],
    # product_volume = item['product_volume'],
    # box_volume = item['box_volume'],
    # box_capacity = item['box_capacity'],
    # packing_volume_factor = item['packing_volume_factor'],
    # is_tire_spike = item['is_tire_spike'],
    # is_tire_run_flat = item['is_tire_run_flat'],
    # tire_season_id = item['tire_season_id'],
    # tire_diameter_id = item['tire_diameter_id'],
    # tire_width_id = item['tire_width_id'],
    # tire_section_height_id = item['tire_section_height_id'],
    # tire_load_index_id = item['tire_load_index_id'],
    # tire_speed_index_id = item['tire_speed_index_id'],
    # wheel_lz_id = item['wheel_lz_id'],
    # wheel_width_id = item['wheel_width_id'],
    # wheel_diameter_id = item['wheel_diameter_id'],
    # wheel_dia_id = item['wheel_dia_id'],
    # wheel_pcd_id = item['wheel_pcd_id'],
    # wheel_et_id = item['wheel_et_id'],
    # has_body_drawing = item['has_body_drawing'],
    # has_cord_case = item['has_cord_case'],
    # has_teapot = item['has_teapot'],
    # has_termostat = item['has_termostat'],
    # is_imprintable = item['is_imprintable'],
    # isbn = item['isbn'],
    # page_count = item['page_count'],
    # is_add_to_cart_multiple = item['isAddToCartMultiple'],
    # supply_period = item['supply_period'],
    # has_action = item['has_action'],
    # has_action_discount_system = item['has_action_discount_system'],
    # has_jewelry_action = item['has_jewelry_action'],
    # has_3_pay_2_action = item['has_3_pay_2_action'],
    # has_best_fabric = item['has_best_fabric'],
    # has_best_textile = item['has_best_textile'],
    # has_number_one_made_in_russia = item['has_number_one_made_in_russia'],
    # photo_url = item['photoUrl'],
    # audio_filename = item['audio_filename'],
    # photo_3d_count = item['photo_3d_count'],
    # is_markdown = item['is_markdown'],
    # is_prepay_needed = item['is_prepay_needed'],
    # is_paid_delivery_ekb = item['is_paid_delivery_ekb'],
    # mean_rating = item['mean_rating'],
    # comments_count = item['comments_count'],
    # markdown_reason = item['markdown_reason'],
    # is_wholesale = item['is_wholesale'],
    # is_wholesale_conservation = item['is_wholesale_conservation'],
    # type = item['type'],
    # is_shock_price = item['is_shock_price'],
    # is_recommended = item['is_recommended'],
    # vat = item['vat'],
    # is_export_to_s3 = item['is_export_to_s3'],
    # currency_sign = item['currencySign'],
    # is_enough = item['isEnough'],
    # qty_rule = item['qtyRule'],
    # qty_rules = item['qty_rules'],
    # custom_qty_rules_data = item['custom_qty_rules_data'],
    # plural_name_format = item['pluralNameFormat'],
    # in_box_plural_name_format = item['inBoxPluralNameFormat'],
    # balance_plural_name_format = item['balancePluralNameFormat'],
    # can_buy_by_credit = item['can_buy_by_credit'],
    # supplier_code = item['supplier_code'],
    # weight = item['weight'],
    # has_special_offer = item['has_special_offer'],
    # has_day_discount = item['has_day_discount'],
    # has_erich_krause = item['has_erich_krause'],
    # has_tm_gamma_gifts = item['has_tm_gamma_gifts'],
    # has_superprice_on_line = item['has_superprice_on_line'],
    # has_week_discount = item['has_week_discount'],
    # has_3days_discount = item['has_3days_discount'],
    # has_best_fabric_2018 = item['has_best_fabric_2018'],
    # has_pay_later = item['has_pay_later'],
    # has_new_rules = item['has_new_rules'],
    # has_item_month = item['has_item_month'],
    # has_batteries_gift = item['has_batteries_gift'],
    # special_offer_id = item['special_offer_id'],
    # has_4_pay_2_action = item['has_4_pay_2_action'],
    # has_take_installments_action = item['has_take_installments_action'],
    # min_sum_order = item['min_sum_order'],
    # wholesale_price = item['wholesale_price'],
    # wholesale_price_text = item['wholesale_price_text'],
    # is_part = item['is_part'],
    # is_remote_store = item['is_remote_store'],
    # is_small_wholesale_available = item['is_small_wholesale_available'],
    # is_plant = item['is_plant'],
    # color = item['color'],
    # image_title = item['image_title'],
    # image_alt = item['image_alt'],
    # short_name = item['short_name'],
    # is_free_delivery = item['is_free_delivery'],
    # min_sum_for_free_delivery = item['min_sum_for_free_delivery'],
    # updated_item_at = item['updated_item_at'],
    # img = item['img'],
    # nested_unit = item['nestedUnit'],
    # is_entrance_type_by_weight = item['isEntranceTypeByWeight'],
    # real_min_qty = item['real_min_qty'],
    # is_weighted_goods = item['is_weighted_goods'],
    # offer = item['offer'],
    # discount_percent = item['discountPercent'],
    # has_gift = item['hasGift'],
    # has_gift_assignee = item['hasGiftAssignee'],
    # is_novelty = item['isNovelty'],
    # item_url = item['itemUrl'],
    # price_unit = item['price_unit'],
    # has_volume_discount = item['has_volume_discount'],
    # modifiers_count = item['modifiers_count'],
    # size = item['size'],
    # stuff = item['stuff'],
    # trademark = item['trademark'],
    # series = item['series'],
    # ecommerce_variant = item['ecommerce_variant'],
    # loan_category_id = item['loan_category_id'],
    # transit_in_settlement = item['transit_in_settlement'],
    # is_item_description_hidden = item['is_item_description_hidden'],
    # is_found_cheaper_enabled = item['is_found_cheaper_enabled'],
    # wholesale_price_unit = item['wholesale_price_unit'],
    # wholesale_text = item['wholesale_text'],
    # arrival_date = item['arrivalDate'],
    # is_available_in_giper = item['is_available_in_giper'],
    # retail_price = item['retail_price'],
    # # video_cover_url=item['video_cover_url'],
# background_tasks = set()
#     pairs = [
#         ('task_1', 1, 4000), ( 'task_2', 4001, 8000),
#         ('task_3', 8001, 12000), ('task_4', 12001, 16000),
#         ('task_5', 16001, 20000), ('task_6', 20001, 24000),
#         ('task_7', 24001, 28000), ('task_8', 28001, 32000),
#         ('task_9', 32001, 36000), ('task_10', 36001, 39894),
#     ]
#     for i in pairs:
#         task = asyncio.create_task(parse(start=i[1], stop=i[2], task_name=i[0]))
#         background_tasks.add(task)
#         task.add_done_callback(background_tasks.discard)
